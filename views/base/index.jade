extends ../layouts/application

block content
  h1 Jam API
  p Jam API is a service that allows you to turn any site into a JSON accessible api using CSS selectors. To get started simply run a post request to https://www.jamapi.xyz with formdata of "url" and "json_data".
  p Here's an example of what your data should look like, this queries the Product Hunt jobs site and gets the company name and the job link:
  form(method="post" action="/")
    label(for='url') URL
    input(type='url' id="url" name='url' value='https://www.producthunt.com/jobs')
    label(for='json_data') JSON
    textarea(name='json_data' id='json_data' rows='10' cols='100')
      | {
      |   "title": "title",
      |   "companies": [{"elem": "ul.jobs li.job a", "link": "href", "name": "text"}],
      |   "company_descriptions": [{"elem": "ul.jobs li.job .description", "name": "text"}]
      | }
    input(type="submit" value='query site')
  h2 Example Sites
  p 
    a(href="https://www.random-medium.xyz") Random Medium
    | : Gets you the top Medium post for a random day from September 10, 2014.
  p 
    | If you'd like to add your site, please submit a 
    a(href="https://www.github.com/gavindinubilo/jam-api") pull request.
  h2 Code Examples
  p 
    | Can be found on 
    a(href="https://www.github.com/gavindinubilo/jam-api") Github
    | . If you'd like to add your own example please make a pull request.
  h2 Features
  ul
    li Passing an element that equates to an img will return the img src.
    li Passing an element that equates to a link will return the href of the link.
    li Passing any other element will return the text of that element.
  p When you pass an array with JSON you'll get a structure that looks as follows:
  pre
    | "companies": [
    |    {
    |        "index": 0,
    |        "value": {
    |            "link": "https://blog.underdog.io/post/140227881612/were-hiring-a-communityrecruiting-lead",
    |            "name": "Underdog.io"
    |        }
    |    },
    |    {
    |        "index": 1,
    |        "value": {
    |            "link": "https://jobs.babbel.com/en/?gh_jid=202241",
    |            "name": "Babbel"
    |        }
    |    },
    | ]
  p All the attributes you provide as JSON will be put inside of the value property, and the index property is to be able to track what index it ocurred in the DOM. I nested JSON values into it's own so that you can still have an "index" property returned and not run into issues.